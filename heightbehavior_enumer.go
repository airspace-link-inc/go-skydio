// Code generated by "enumer -type=HeightBehavior -transform=snake-upper -trimprefix=HeightBehavior"; DO NOT EDIT.

package skydio

import (
	"fmt"
	"strings"
)

const _HeightBehaviorName = "ABSOLUTERELATIVE"

var _HeightBehaviorIndex = [...]uint8{0, 8, 16}

const _HeightBehaviorLowerName = "absoluterelative"

func (i HeightBehavior) String() string {
	if i >= HeightBehavior(len(_HeightBehaviorIndex)-1) {
		return fmt.Sprintf("HeightBehavior(%d)", i)
	}
	return _HeightBehaviorName[_HeightBehaviorIndex[i]:_HeightBehaviorIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _HeightBehaviorNoOp() {
	var x [1]struct{}
	_ = x[HeightBehaviorAbsolute-(0)]
	_ = x[HeightBehaviorRelative-(1)]
}

var _HeightBehaviorValues = []HeightBehavior{HeightBehaviorAbsolute, HeightBehaviorRelative}

var _HeightBehaviorNameToValueMap = map[string]HeightBehavior{
	_HeightBehaviorName[0:8]:       HeightBehaviorAbsolute,
	_HeightBehaviorLowerName[0:8]:  HeightBehaviorAbsolute,
	_HeightBehaviorName[8:16]:      HeightBehaviorRelative,
	_HeightBehaviorLowerName[8:16]: HeightBehaviorRelative,
}

var _HeightBehaviorNames = []string{
	_HeightBehaviorName[0:8],
	_HeightBehaviorName[8:16],
}

// HeightBehaviorString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func HeightBehaviorString(s string) (HeightBehavior, error) {
	if val, ok := _HeightBehaviorNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _HeightBehaviorNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to HeightBehavior values", s)
}

// HeightBehaviorValues returns all values of the enum
func HeightBehaviorValues() []HeightBehavior {
	return _HeightBehaviorValues
}

// HeightBehaviorStrings returns a slice of all String values of the enum
func HeightBehaviorStrings() []string {
	strs := make([]string, len(_HeightBehaviorNames))
	copy(strs, _HeightBehaviorNames)
	return strs
}

// IsAHeightBehavior returns "true" if the value is listed in the enum definition. "false" otherwise
func (i HeightBehavior) IsAHeightBehavior() bool {
	for _, v := range _HeightBehaviorValues {
		if i == v {
			return true
		}
	}
	return false
}
