// Code generated by "enumer -type=MissionInterruptedReturnType -transform=snake-upper -trimprefix=MissionInterruptedReturnType -json"; DO NOT EDIT.

package skydio

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _MissionInterruptedReturnTypeName = "BACKTRACKUP_AND_OVER"

var _MissionInterruptedReturnTypeIndex = [...]uint8{0, 9, 20}

const _MissionInterruptedReturnTypeLowerName = "backtrackup_and_over"

func (i MissionInterruptedReturnType) String() string {
	if i >= MissionInterruptedReturnType(len(_MissionInterruptedReturnTypeIndex)-1) {
		return fmt.Sprintf("MissionInterruptedReturnType(%d)", i)
	}
	return _MissionInterruptedReturnTypeName[_MissionInterruptedReturnTypeIndex[i]:_MissionInterruptedReturnTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _MissionInterruptedReturnTypeNoOp() {
	var x [1]struct{}
	_ = x[MissionInterruptedReturnTypeBacktrack-(0)]
	_ = x[MissionInterruptedReturnTypeUpAndOver-(1)]
}

var _MissionInterruptedReturnTypeValues = []MissionInterruptedReturnType{MissionInterruptedReturnTypeBacktrack, MissionInterruptedReturnTypeUpAndOver}

var _MissionInterruptedReturnTypeNameToValueMap = map[string]MissionInterruptedReturnType{
	_MissionInterruptedReturnTypeName[0:9]:       MissionInterruptedReturnTypeBacktrack,
	_MissionInterruptedReturnTypeLowerName[0:9]:  MissionInterruptedReturnTypeBacktrack,
	_MissionInterruptedReturnTypeName[9:20]:      MissionInterruptedReturnTypeUpAndOver,
	_MissionInterruptedReturnTypeLowerName[9:20]: MissionInterruptedReturnTypeUpAndOver,
}

var _MissionInterruptedReturnTypeNames = []string{
	_MissionInterruptedReturnTypeName[0:9],
	_MissionInterruptedReturnTypeName[9:20],
}

// MissionInterruptedReturnTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func MissionInterruptedReturnTypeString(s string) (MissionInterruptedReturnType, error) {
	if val, ok := _MissionInterruptedReturnTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _MissionInterruptedReturnTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to MissionInterruptedReturnType values", s)
}

// MissionInterruptedReturnTypeValues returns all values of the enum
func MissionInterruptedReturnTypeValues() []MissionInterruptedReturnType {
	return _MissionInterruptedReturnTypeValues
}

// MissionInterruptedReturnTypeStrings returns a slice of all String values of the enum
func MissionInterruptedReturnTypeStrings() []string {
	strs := make([]string, len(_MissionInterruptedReturnTypeNames))
	copy(strs, _MissionInterruptedReturnTypeNames)
	return strs
}

// IsAMissionInterruptedReturnType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i MissionInterruptedReturnType) IsAMissionInterruptedReturnType() bool {
	for _, v := range _MissionInterruptedReturnTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for MissionInterruptedReturnType
func (i MissionInterruptedReturnType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for MissionInterruptedReturnType
func (i *MissionInterruptedReturnType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("MissionInterruptedReturnType should be a string, got %s", data)
	}

	var err error
	*i, err = MissionInterruptedReturnTypeString(s)
	return err
}
